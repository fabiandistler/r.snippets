# targets package snippets

# ─────────────────────────────────────────────────────────────
# Setup & Configuration
snippet tarinit "Initialize targets project"
	targets::use_targets()

# ─────────────────────────────────────────────────────────────
# Target Definition
snippet tar "Basic target"
	targets::tar_target(
		name = ${1:target_name},
		command = ${2:expression}
	)

snippet tarfile "File target"
	targets::tar_target(
		name = ${1:file_target},
		command = ${2:"path/to/file.csv"},
		format = "file"
	)

# ─────────────────────────────────────────────────────────────
# Dynamic Branching
snippet tarmap "Map over single target"
	tar_target(
		name = ${1:mapped_target},
		command = ${2:expression_using_}${3:upstream},
		pattern = map(${3:upstream})
	)


# ─────────────────────────────────────────────────────────────
# Pipeline Execution
snippet tarmake "Run pipeline"
	targets::tar_make()

# ─────────────────────────────────────────────────────────────
# Reading Results
snippet tarread "Read single target"
	targets::tar_read(${1:target_name})

snippet tarload "Load targets into environment"
	targets::tar_load(${1:target_name})

# ─────────────────────────────────────────────────────────────
# Inspection & Visualization
snippet tarvis "Visualize pipeline network"
	targets::tar_visnetwork(
		names = ${1:NULL},
		outdated = ${2:TRUE},
		label = "${3:time}",
		level_separation = ${4:100}
	)

snippet tarman "Show manifest"
	targets::tar_manifest(
		names = ${1:NULL},
		fields = tidyselect::any_of(c("name", "command", "pattern", "description"))
	)

snippet tarout "Check outdated targets"
	targets::tar_outdated()

snippet tarprog "Show progress"
	targets::tar_progress()

# ─────────────────────────────────────────────────────────────
# Cleanup & Management
snippet tardelete "Delete specific targets"
	targets::tar_delete(names = c(${1:"target1", "target2"}))

snippet tardestroy "Remove entire store"
	targets::tar_destroy()

snippet tarprune "Remove outdated objects"
	targets::tar_prune()

snippet targc "Run garbage collection"
	targets::tar_invalidate(names = c(${1:"target_name"}))

# ─────────────────────────────────────────────────────────────
# Debugging & Development
snippet tarworkspace "Load target workspace for debugging"
	targets::tar_workspace(${1:target_name})

snippet tardebug "Set debug mode for target"
	targets::tar_option_set(debug = "${1:target_name}")

# ─────────────────────────────────────────────────────────────
# tarchetypes Integration
snippet targroup "Group by columns (tarchetypes)"
	tar_group_by(
		name = ${1:grouped_data},
		command = ${2:data},
		${3:grouping_column}
	)

snippet tarmap2 "Map with custom names (tarchetypes)"
	tar_map(
		values = tibble::tibble(
			${1:param1} = ${2:c("a", "b", "c")},
			${3:param2} = ${4:c(1, 2, 3)}
		),
		targets::tar_target(
			name = ${5:target_name},
			command = ${6:expression_using_params}
		)
	)

snippet tarrender "Render Rmd document (tarchetypes)"
	tar_render(
		name = ${1:report},
		path = "${2:report.Rmd}",
		params = list(${3})
	)

snippet tarquarto "Render Quarto document (tarchetypes)"
	tar_quarto(
		name = ${1:report},
		path = "${2:report.qmd}",
		execute_params = list(${3})
	)

# ─────────────────────────────────────────────────────────────
# Common Patterns
snippet tardata "Data loading pattern"
	targets::tar_target(
		name = ${1:raw_data},
		command = ${2:data.table::fread}(${3:file_path}),
		format = "${4:qs}"
	)

snippet tarmodel "Model fitting pattern"
	targets::tar_target(
		name = ${1:model},
		command = {
			${2:lm}(${3:formula}, data = ${4:prepared_data})
		}
	)

snippet tarplot "Plot creation pattern"
	targets::tar_target(
		name = ${1:plot},
		command = {
			ggplot2::ggplot(${2:data}, ggplot2::aes(${3})) +
				${4:geom_point}()
		}
	)

snippet tarsave "Save output pattern"
	targets::tar_target(
		name = ${1:output_file},
		command = {
			${2:ggsave}("${3:output.png}", ${4:plot_object})
			"${3:output.png}"
		},
		format = "file"
	)
